@using PagedList;
@using PagedList.Mvc;
@model SurveyME.ModelViews.CompleteSectionViewModel

@{
    ViewBag.Title = "My Sections";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col">
        <div class="card surveyme-input-card mb-4 shadow">
            <div class="card-header border-0 pb-0">
                <h5 class="card-title text-center fw-bold text-success">Survey Form Sections</h5>
            </div>

            <div class="card-body">
                @foreach (var item in Model.sectionslist)
                {
                    <div>
                        <div class="mb-3">
                            <button class="btn btn-success myBorderradius d-grid transform-87" type="button" onclick="location.href='@Url.Action("Create", "Sections", new { surveyform_id = item.SurveyForm_Id })'">Add section</button>
                        </div>

                        <div class="card bg-success rounded-3">
                            <div class="card-body">
                                <h6 class="card-title text-white fw-bold">Section title - <span class="fw-normal">@Html.DisplayFor(modelItem => item.SectionTitle)</span></h6>
                                <p class="card-text text-white">@Html.Raw(item.SectionDescription)</p>
                                <button class="btn btn-outline-light myBorderradius surveyme-report-button transform-87" type="button" onclick="location.href='@Url.Action("Edit", "Sections", new { id = item.Id })'">Edit section</button>
                            </div>
                        </div>

                        <div class="mt-3">
                            <button class="btn btn-success myBorderradius d-inline-block transform-87 me-12" type="button" onclick="location.href='@Url.Action("Create", "BinaryChoices", new { surveyform_id = item.SurveyForm_Id, section_id = item.Id })'"><span class="fa fa-plus-circle"></span>  Short Answer</button>
                            <button class="btn btn-success myBorderradius d-inline-block transform-87 me-12" type="button" onclick="location.href='@Url.Action("Create", "BinaryChoices", new { surveyform_id = item.SurveyForm_Id, section_id = item.Id })'"><span class="fa fa-plus-circle"></span>  Binary Choice</button>
                            <button class="btn btn-success myBorderradius d-inline-block transform-87 me-12" type="button" onclick="location.href='@Url.Action("Create", "BinaryChoices", new { surveyform_id = item.SurveyForm_Id, section_id = item.Id })'"><span class="fa fa-plus-circle"></span>  Single Choice</button>
                            <button class="btn btn-success myBorderradius d-inline-block transform-87 me-12" type="button" onclick="location.href='@Url.Action("Create", "BinaryChoices", new { surveyform_id = item.SurveyForm_Id, section_id = item.Id })'"><span class="fa fa-plus-circle"></span>  Multiple Choice section</button>
                        </div>

                        @{ int current_sectionid = item.Id;
                            var uniquelist = Model.binarychoicelist;
                            var con_uniquelist = uniquelist.Where(x => x.Section_Id.Equals(current_sectionid));
                            int num = 0;
                        }

                        @foreach (var subitem in con_uniquelist)
                        {
                            <div class="card bg-light mt-3 rounded-3">
                                <div class="card-body">
                                    <h6 class="card-title text-success fw-bold">Question @(num += 1) - <span class="fw-normal text-black">@Html.DisplayFor(modelItem => subitem.Question)</span></h6>
                                    <p class="text-success mb-1 fw-bold">First option - <span class="card-text text-black fw-normal">@Html.Raw(subitem.FirstOption)</span></p>
                                    <p class="text-success fw-bold">Second option - <span class="card-text text-black fw-normal">@Html.Raw(subitem.SecondOption)</span></p>
                                    <button class="btn btn-outline-secondary myBorderradius surveyme-report-button transform-87" type="button" onclick="location.href='@Url.Action("Edit", "BinaryChoices", new { id = subitem.Id, surveyform_Id = subitem.SurveyForm_Id })'">Edit question</button>                                  
                                </div>
                            </div>
                        }
                    </div>
                }
            </div>

            <div>
                @Html.PagedListPager(Model.sectionslist, page =>
                    Url.Action("Index", new
                         {
                        page = page,
                        surveyform_id = Request.QueryString["surveyform_id"]
                    }),
                    new PagedListRenderOptions
                    {
                        UlElementClasses = new string[] { "pagination pagination-xs pagination-gutter  pagination-warning" },
                        LiElementClasses = new string[] { "page-item" },
                        LinkToPreviousPageFormat = "Previous",
                        LinkToNextPageFormat = "Next",
                        ClassToApplyToLastListItemInPager = "page-previus",
                        ClassToApplyToFirstListItemInPager = "page-next",
                        FunctionToTransformEachPageLink = (li, a) =>
                        {
                            a.AddCssClass("page-link");
                            li.InnerHtml = a.ToString();
                            return li;
                        }
                    })
            </div>
        </div>
    </div>

    <div class="col-3"></div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

}

